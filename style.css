 @font-face {
  font-family: 'Karla';
  src: url('./assets/fonts/Karla-VariableFont_wght.ttf') format('truetype');
  font-weight: 400 700;
 }

:root {
  --bp-mobile: calc(375 / 16 * 1rem);
  --bp-desktop: calc(1440 / 16 * 1rem);

  --clr-green-200: hsl(148, 38%, 91%);
  --clr-green-600: hsl(169, 82%, 27%);
  --clr-red: hsl(0, 66%, 54%);
  --clr-white: hsl(0, 0%, 100%);
  --clr-grey-500: hsl(186, 15%, 59%);
  --clr-grey-900: hsl(187, 24%, 22%);

  --ff-base: "Karla", sans-serif;
  --fw-normal: 400;
  --fw-bold: 700;
}

@layer reset {
  *,
  ::before,
  ::after {
    box-sizing: border-box;
  }

  body {
    accent-color: var(--clr-green-600);
    font-size: 1rem;
    font-family: var(--ff-base);
    line-height: 1.6;
    background-color: var(--clr-green-200);
    height: 100vh;
  }

  h1,
  h2,
  p {
    margin-block: 0;
  }

  input,
  button,
  textarea {
    font: inherit;
  }
}

@layer form {
  .container {
    max-inline-size: calc(700 / 16 * 1rem);
    background-color: var(--clr-white);
    margin-inline: auto;
    margin-block-start: 4rem;
    padding: 2rem;
    border-radius: 1rem;
  }

  h1 {
    margin-block-end: 2rem;
    color: var(--clr-grey-900);
  }

  form {
    * {
      color: var(--clr-grey-900);
    }

    display: grid;
    gap: 1.5rem 1rem;

    @media (width > 550px) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .form-group {
    display: grid;
    gap: .25rem;
    grid-auto-rows: min-content;
  }

  .form-group:has(:not([type="radio"])[required]) label,
  fieldset:has([required]) legend {
    display: flex;
    gap: 1ch;

    &::after {
      content: "*";
      color: var(--clr-green-600);
    }
  }

  input,
  textarea,
  .form-group:has(input[type="radio"]) {
    border: solid 1px var(--clr-green-600);
    border-radius: .5rem;
    padding: .75rem 1.5rem;
  }

   .form-group:has(input[type="radio"]) {
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
    position: relative;

    label::before {
      position: absolute;
      content: "";
      inset: 0;
      cursor: pointer;
    }
   }

  input,
  textarea,
  button {
    &:hover,
    &:focus-visible {
      outline-color: var(--clr-green-600);
    }
  }

  input:hover {
    border-color: var(--clr-green-900);
  }

  fieldset {
    border: none;
    padding: 0;
    display: grid;
    grid-template-columns: inherit;
    gap: inherit;
  }

  legend {
    margin-block-end: .5em;
  }

  textarea {
    height: 8lh;
    box-sizing: content-box;

    @media (width > 550px) {
      height: 3lh;
    }
  }

  input[type="radio"],
  input[type="checkbox"] {
    width: 1.75cap;
  }

  .form-group:has(input[type="radio"]:checked) {
    background-color: var(--clr-green-200);
    border-color: var(--clr-green-600)
  }

  .checkbox-group {
    display: flex;
    align-items: center;
    gap: 1ch;
  }

  .form-group:has([type="radio"], [type="checkbox"]) {
    display: flex;
    flex-wrap: wrap;

    .error-message {
      flex-basis: 100%;
      width: 100%;
    }
  }

  button {
    background-color: var(--clr-green-600);
    color: var(--clr-white);
    border: none;
    border-radius: .5rem;
    padding: .75rem 1.5rem;
    transition: background-color 0.2s ease-in-out;

    &:hover,
    &:focus-visible {
      background-color: var(--clr-grey-900);
      cursor: pointer;
    }
  }

  input:user-invalid,
  textarea:user-invalid {
    border-color: var(--clr-red);
  }

  .error-message {
    color: var(--clr-red);
  }

  .error-message:empty {
    display: none;
  }
}

@layer toast {
  .toast-container {
    position: fixed;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
  }

  .toast-title {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-size: 1.25rem;
    font-weight: var(--fw-bold);
    margin-block-end: .5rem;
  }

  .toast {
    display: none;
    min-inline-size: 250px;
    background-color: var(--clr-grey-900);
    color: var(--clr-white);
    padding: 1.5rem;
    border-radius: .75rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    animation: slide-in 0.5s forwards, fade-out 0.5s 8s forwards;
  }

  .toast.show {
    display: block;
  }

  @keyframes slide-in {
    from {
      transform: translateY(-50%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes fade-out {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
}

@layer utilities {
  .span-all {
    grid-column: 1 / -1;
  }
}